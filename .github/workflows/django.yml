name: Django CI

env:
  NEWSAPI_KEY: ${{ secrets.NEWSAPI_KEY }}
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  CSRF_TRUSTED_ORIGINS: ${{ secrets.CSRF_TRUSTED_ORIGINS }}
  DEBUG: ${{ secrets.DEBUG }}
  ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11.0]
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        # ensures postgres container provides a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-django
    - name: Run Tests
      run: |
        cd pressfeed
        python manage.py migrate
        python manage.py test

  deploy:
    needs: build
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        FLY_APP_NAME: pressfeed
    steps:
    - uses: actions/checkout@v2
    - uses: superfly/flyctl-actions/setup-flyctl@master
    - run: |
        cd pressfeed
        flyctl deploy --remote-only -a pressfeed
